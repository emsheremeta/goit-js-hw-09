{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","totalFuckingDelay","Number","refs","firstDelay","value","console","log","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","submitBtn","document","querySelector","delayStep","amount","onClick","event","preventDefault","i","then","catch","addEventListener"],"mappings":";AAQA,SAASA,EAAcC,EAAUC,GAC3BC,IAAAA,EAAqBC,OAAOC,EAAKC,WAAWC,OAASH,OAAOH,EAAWC,GAC3EM,QAAQC,IAAI,kBAAoBN,GAC1BO,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLN,EACFI,EAAQ,CAACb,SAAAA,EAAUE,kBAAAA,IAEnBY,EAAO,CAACd,SAAAA,EAAUE,kBAAAA,KAEnBA,KAIP,MAAME,EAAO,CACXY,UAAYC,SAASC,cAAc,UACnCb,WAAYY,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,OAAQH,SAASC,cAAc,yBAG3BG,EAAWC,IACfA,EAAMC,iBACF,IAAA,IAAIC,EAAI,EAAGA,EAAIpB,EAAKgB,OAAOd,MAAOkB,IACpCzB,EAAcyB,EAAGpB,EAAKe,UAAUb,OAC/BmB,KAAK,EAAGzB,SAAAA,EAAUE,kBAAAA,MACjBK,QAAQC,2BAA2BR,QAAeE,SAEnDwB,MAAM,EAAG1B,SAAAA,EAAUE,kBAAAA,MAClBK,QAAQC,0BAA0BR,QAAeE,UAOvDE,EAAKY,UAAUW,iBAAiB,QAASN","file":"03-promises.4798052c.js","sourceRoot":"../src","sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nfunction createPromise(position, delay) {\n  let totalFuckingDelay = (Number(refs.firstDelay.value) + Number(position * delay));\n  console.log('inside promise ' + totalFuckingDelay);\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, totalFuckingDelay});\n      } else {\n        reject({position, totalFuckingDelay});\n      }\n    }, totalFuckingDelay);\n  });\n}\n\nconst refs = {\n  submitBtn : document.querySelector('button'),\n  firstDelay: document.querySelector('input[name=\"delay\"]') ,\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]')\n}\n\nconst onClick = (event) => {\n  event.preventDefault();\n  for(let i = 0; i < refs.amount.value; i++) {\n    createPromise(i, refs.delayStep.value)\n    .then(({ position, totalFuckingDelay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${totalFuckingDelay}ms`);\n    })\n    .catch(({ position, totalFuckingDelay }) => {\n      console.log(`❌ Rejected promise ${position} in ${totalFuckingDelay}ms`);\n    });\n    \n  }\n  \n};\n\nrefs.submitBtn.addEventListener('click', onClick);\n\n"]}